#!/bin/bash

# Default max retries if not specified as a valid number
DEFAULT_MAX_RETRIES=5

# Check if enough arguments are provided
if [ "$#" -lt 1 ]; then
  echo "Usage: $0 [max_retries] command [args...]"
  exit 1
fi

# Check if the first argument is a number (for max_retries)
if [[ "$1" =~ ^[0-9]+$ ]]; then
  max_retries=$1
  shift # Shift to remove max_retries from arguments
else
  echo "Warning: max_retries not provided or not a valid number. Using default: $DEFAULT_MAX_RETRIES"
  max_retries=$DEFAULT_MAX_RETRIES
fi

# The command to execute (all remaining arguments)
command="$1"
shift

# Check if the command exists
if ! command -v "$command" &>/dev/null; then
  echo "Error: Command '$command' not found."
  exit 127
fi

# Initial retry counter
retry_count=0

# Run the command until it succeeds or the retry count exceeds max_retries
while true; do
  # Execute the command with any provided arguments
  "$command" "$@"
  exit_code=$?

  # Check if command was successful
  if [ $exit_code -eq 0 ]; then
    break
  fi

  # Increment retry count
  retry_count=$((retry_count + 1))

  # Check if we've reached the maximum number of retries
  if [ $retry_count -ge $max_retries ]; then
    echo "Command failed after $retry_count attempts."
    exit $exit_code
  fi

  echo "Command failed with exit code $exit_code. Retrying... ($retry_count/$max_retries)"
done
